# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.1.1
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.

from sys import version_info as _swig_python_version_info
# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _cinit
else:
    import _cinit

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


PRIuPTR = _cinit.PRIuPTR

PRIdPTR = _cinit.PRIdPTR

LLU = _cinit.LLU

LLO = _cinit.LLO

LLX = _cinit.LLX

false = _cinit.false

true = _cinit.true

OUTCOME_GENERIC_ERROR = _cinit.OUTCOME_GENERIC_ERROR

OUTCOME_PARSER_ERROR = _cinit.OUTCOME_PARSER_ERROR

OUTCOME_SYNTAX_ERROR = _cinit.OUTCOME_SYNTAX_ERROR

OUTCOME_FILE_ERROR = _cinit.OUTCOME_FILE_ERROR

OUTCOME_SUCCESS_REQUIRED_HELP = _cinit.OUTCOME_SUCCESS_REQUIRED_HELP

OUTCOME_SUCCESS = _cinit.OUTCOME_SUCCESS

NUSMV_LIBRARY_NAME = _cinit.NUSMV_LIBRARY_NAME

NUSMV_LIBRARY_VERSION = _cinit.NUSMV_LIBRARY_VERSION

NUSMV_LIBRARY_BUILD_DATE = _cinit.NUSMV_LIBRARY_BUILD_DATE

NUSMV_LIBRARY_EMAIL = _cinit.NUSMV_LIBRARY_EMAIL

NUSMV_LIBRARY_WEBSITE = _cinit.NUSMV_LIBRARY_WEBSITE

NUSMV_LIBRARY_BUGREPORT = _cinit.NUSMV_LIBRARY_BUGREPORT


def CInit_NuSMVReadVersion():
    r"""CInit_NuSMVReadVersion() -> char *"""
    return _cinit.CInit_NuSMVReadVersion()

def CInit_NuSMVObtainLibrary():
    r"""CInit_NuSMVObtainLibrary() -> char *"""
    return _cinit.CInit_NuSMVObtainLibrary()

def CInit_NuSMVInitPrintMore():
    r"""CInit_NuSMVInitPrintMore()"""
    return _cinit.CInit_NuSMVInitPrintMore()

def CInit_NuSMVEndPrintMore():
    r"""CInit_NuSMVEndPrintMore() -> int"""
    return _cinit.CInit_NuSMVEndPrintMore()

def CInit_BannerPrint(file):
    r"""CInit_BannerPrint(FILE * file)"""
    return _cinit.CInit_BannerPrint(file)

def CInit_BannerPrintLibrary(file):
    r"""CInit_BannerPrintLibrary(FILE * file)"""
    return _cinit.CInit_BannerPrintLibrary(file)

def CInit_BannerPrint_nusmv_library(file):
    r"""CInit_BannerPrint_nusmv_library(FILE * file)"""
    return _cinit.CInit_BannerPrint_nusmv_library(file)

def CInit_BannerPrint_cudd(file):
    r"""CInit_BannerPrint_cudd(FILE * file)"""
    return _cinit.CInit_BannerPrint_cudd(file)

def CInit_BannerPrint_minisat(file):
    r"""CInit_BannerPrint_minisat(FILE * file)"""
    return _cinit.CInit_BannerPrint_minisat(file)

def CInit_BannerPrint_zchaff(file):
    r"""CInit_BannerPrint_zchaff(FILE * file)"""
    return _cinit.CInit_BannerPrint_zchaff(file)

def CInit_NusmvrcSource():
    r"""CInit_NusmvrcSource() -> int"""
    return _cinit.CInit_NusmvrcSource()

def save_nusmv_stdout():
    r"""save_nusmv_stdout()"""
    return _cinit.save_nusmv_stdout()

def restore_nusmv_stdout():
    r"""restore_nusmv_stdout()"""
    return _cinit.restore_nusmv_stdout()

def set_nusmv_stdout(name):
    r"""set_nusmv_stdout(char const * name)"""
    return _cinit.set_nusmv_stdout(name)

def get_nusmv_stdout():
    r"""get_nusmv_stdout() -> FILE *"""
    return _cinit.get_nusmv_stdout()

def print_nusmv_stdout(*args):
    r"""print_nusmv_stdout(char const * fmt)"""
    return _cinit.print_nusmv_stdout(*args)

def close_nusmv_stdout():
    r"""close_nusmv_stdout()"""
    return _cinit.close_nusmv_stdout()

def save_nusmv_stderr():
    r"""save_nusmv_stderr()"""
    return _cinit.save_nusmv_stderr()

def restore_nusmv_stderr():
    r"""restore_nusmv_stderr()"""
    return _cinit.restore_nusmv_stderr()

def set_nusmv_stderr(name):
    r"""set_nusmv_stderr(char const * name)"""
    return _cinit.set_nusmv_stderr(name)

def get_nusmv_stderr():
    r"""get_nusmv_stderr() -> FILE *"""
    return _cinit.get_nusmv_stderr()

def print_nusmv_stderr(*args):
    r"""print_nusmv_stderr(char const * fmt)"""
    return _cinit.print_nusmv_stderr(*args)

def close_nusmv_stderr():
    r"""close_nusmv_stderr()"""
    return _cinit.close_nusmv_stderr()

def nusmv_FREE(ptr):
    r"""nusmv_FREE(void * ptr)"""
    return _cinit.nusmv_FREE(ptr)

def get_preprocessor_call(name):
    r"""get_preprocessor_call(char const * name) -> char *"""
    return _cinit.get_preprocessor_call(name)

def get_preprocessor_filename(name):
    r"""get_preprocessor_filename(char const * name) -> char *"""
    return _cinit.get_preprocessor_filename(name)

def get_preprocessor_names():
    r"""get_preprocessor_names() -> char *"""
    return _cinit.get_preprocessor_names()

def get_preprocessors_num():
    r"""get_preprocessors_num() -> int"""
    return _cinit.get_preprocessors_num()

def NuSMVCore_get_tool_name():
    r"""NuSMVCore_get_tool_name() -> char *"""
    return _cinit.NuSMVCore_get_tool_name()

def NuSMVCore_get_tool_rc_file_name():
    r"""NuSMVCore_get_tool_rc_file_name() -> char *"""
    return _cinit.NuSMVCore_get_tool_rc_file_name()

def NuSMVCore_set_tool_name(tool_name):
    r"""NuSMVCore_set_tool_name(char * tool_name)"""
    return _cinit.NuSMVCore_set_tool_name(tool_name)

def NuSMVCore_get_tool_version():
    r"""NuSMVCore_get_tool_version() -> char *"""
    return _cinit.NuSMVCore_get_tool_version()

def NuSMVCore_set_tool_version(tool_version):
    r"""NuSMVCore_set_tool_version(char * tool_version)"""
    return _cinit.NuSMVCore_set_tool_version(tool_version)

def NuSMVCore_get_build_date():
    r"""NuSMVCore_get_build_date() -> char *"""
    return _cinit.NuSMVCore_get_build_date()

def NuSMVCore_set_build_date(build_date):
    r"""NuSMVCore_set_build_date(char * build_date)"""
    return _cinit.NuSMVCore_set_build_date(build_date)

def NuSMVCore_get_prompt_string():
    r"""NuSMVCore_get_prompt_string() -> char *"""
    return _cinit.NuSMVCore_get_prompt_string()

def NuSMVCore_set_prompt_string(prompt_string):
    r"""NuSMVCore_set_prompt_string(char * prompt_string)"""
    return _cinit.NuSMVCore_set_prompt_string(prompt_string)

def NuSMVCore_get_email():
    r"""NuSMVCore_get_email() -> char *"""
    return _cinit.NuSMVCore_get_email()

def NuSMVCore_set_email(email):
    r"""NuSMVCore_set_email(char * email)"""
    return _cinit.NuSMVCore_set_email(email)

def NuSMVCore_get_website():
    r"""NuSMVCore_get_website() -> char *"""
    return _cinit.NuSMVCore_get_website()

def NuSMVCore_set_website(website):
    r"""NuSMVCore_set_website(char * website)"""
    return _cinit.NuSMVCore_set_website(website)

def NuSMVCore_get_bug_report_message():
    r"""NuSMVCore_get_bug_report_message() -> char *"""
    return _cinit.NuSMVCore_get_bug_report_message()

def NuSMVCore_set_bug_report_message(bug_report_message):
    r"""NuSMVCore_set_bug_report_message(char * bug_report_message)"""
    return _cinit.NuSMVCore_set_bug_report_message(bug_report_message)

def NuSMVCore_get_linked_addons():
    r"""NuSMVCore_get_linked_addons() -> char *"""
    return _cinit.NuSMVCore_get_linked_addons()

def NuSMVCore_set_linked_addons(linked_addons):
    r"""NuSMVCore_set_linked_addons(char * linked_addons)"""
    return _cinit.NuSMVCore_set_linked_addons(linked_addons)

def NuSMVCore_get_library_name():
    r"""NuSMVCore_get_library_name() -> char *"""
    return _cinit.NuSMVCore_get_library_name()

def NuSMVCore_get_library_version():
    r"""NuSMVCore_get_library_version() -> char *"""
    return _cinit.NuSMVCore_get_library_version()

def NuSMVCore_get_library_build_date():
    r"""NuSMVCore_get_library_build_date() -> char *"""
    return _cinit.NuSMVCore_get_library_build_date()

def NuSMVCore_get_library_email():
    r"""NuSMVCore_get_library_email() -> char *"""
    return _cinit.NuSMVCore_get_library_email()

def NuSMVCore_get_library_website():
    r"""NuSMVCore_get_library_website() -> char *"""
    return _cinit.NuSMVCore_get_library_website()

def NuSMVCore_get_library_bug_report_message():
    r"""NuSMVCore_get_library_bug_report_message() -> char *"""
    return _cinit.NuSMVCore_get_library_bug_report_message()

def NuSMVCore_set_banner_print_fun(banner_print_fun):
    r"""NuSMVCore_set_banner_print_fun(void (*)(FILE *) banner_print_fun)"""
    return _cinit.NuSMVCore_set_banner_print_fun(banner_print_fun)

def NuSMVCore_set_batch_fun(batch_fun):
    r"""NuSMVCore_set_batch_fun(void (*)(void) batch_fun)"""
    return _cinit.NuSMVCore_set_batch_fun(batch_fun)

def NuSMVCore_add_env_command_line_option(name, usage, parameter, env_var, is_deprecated, is_public, dependency, conflict):
    r"""NuSMVCore_add_env_command_line_option(char * name, char * usage, char * parameter, char * env_var, boolean is_deprecated, boolean is_public, char * dependency, char * conflict)"""
    return _cinit.NuSMVCore_add_env_command_line_option(name, usage, parameter, env_var, is_deprecated, is_public, dependency, conflict)

def NuSMVCore_add_command_line_option(name, usage, parameter, check_and_apply, is_deprecated, is_public, dependency, conflict):
    r"""NuSMVCore_add_command_line_option(char * name, char * usage, char * parameter, boolean (*)(OptsHandler_ptr,char *) check_and_apply, boolean is_deprecated, boolean is_public, char * dependency, char * conflict)"""
    return _cinit.NuSMVCore_add_command_line_option(name, usage, parameter, check_and_apply, is_deprecated, is_public, dependency, conflict)

def NuSMVCore_init_data():
    r"""NuSMVCore_init_data()"""
    return _cinit.NuSMVCore_init_data()

def NuSMVCore_init_cmd_options():
    r"""NuSMVCore_init_cmd_options()"""
    return _cinit.NuSMVCore_init_cmd_options()

def NuSMVCore_init(fns, arg2):
    r"""NuSMVCore_init(FP_V_V [][2] fns, int arg2)"""
    return _cinit.NuSMVCore_init(fns, arg2)

def NuSMVCore_main(argc, argv, status):
    r"""NuSMVCore_main(int argc, char ** argv, int * status) -> boolean"""
    return _cinit.NuSMVCore_main(argc, argv, status)

def NuSMVCore_reset():
    r"""NuSMVCore_reset()"""
    return _cinit.NuSMVCore_reset()

def NuSMVCore_quit():
    r"""NuSMVCore_quit()"""
    return _cinit.NuSMVCore_quit()

cvar = _cinit.cvar

