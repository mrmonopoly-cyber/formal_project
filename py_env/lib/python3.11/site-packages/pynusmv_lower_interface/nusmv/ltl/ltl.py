# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.1.1
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.

from sys import version_info as _swig_python_version_info
# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _ltl
else:
    import _ltl

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


class Ltl_StructCheckLtlSpec_TAG(object):
    r"""Proxy of C Ltl_StructCheckLtlSpec_TAG struct."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    prop = property(_ltl.Ltl_StructCheckLtlSpec_TAG_prop_get, _ltl.Ltl_StructCheckLtlSpec_TAG_prop_set, doc=r"""prop : Prop_ptr""")
    fsm = property(_ltl.Ltl_StructCheckLtlSpec_TAG_fsm_get, _ltl.Ltl_StructCheckLtlSpec_TAG_fsm_set, doc=r"""fsm : BddFsm_ptr""")
    bdd_enc = property(_ltl.Ltl_StructCheckLtlSpec_TAG_bdd_enc_get, _ltl.Ltl_StructCheckLtlSpec_TAG_bdd_enc_set, doc=r"""bdd_enc : BddEnc_ptr""")
    dd = property(_ltl.Ltl_StructCheckLtlSpec_TAG_dd_get, _ltl.Ltl_StructCheckLtlSpec_TAG_dd_set, doc=r"""dd : p.DdManager""")
    symb_table = property(_ltl.Ltl_StructCheckLtlSpec_TAG_symb_table_get, _ltl.Ltl_StructCheckLtlSpec_TAG_symb_table_set, doc=r"""symb_table : SymbTable_ptr""")
    tableau_layer = property(_ltl.Ltl_StructCheckLtlSpec_TAG_tableau_layer_get, _ltl.Ltl_StructCheckLtlSpec_TAG_tableau_layer_set, doc=r"""tableau_layer : SymbLayer_ptr""")
    s0 = property(_ltl.Ltl_StructCheckLtlSpec_TAG_s0_get, _ltl.Ltl_StructCheckLtlSpec_TAG_s0_set, doc=r"""s0 : bdd_ptr""")
    spec_formula = property(_ltl.Ltl_StructCheckLtlSpec_TAG_spec_formula_get, _ltl.Ltl_StructCheckLtlSpec_TAG_spec_formula_set, doc=r"""spec_formula : node_ptr""")
    oreg2smv = property(_ltl.Ltl_StructCheckLtlSpec_TAG_oreg2smv_get, _ltl.Ltl_StructCheckLtlSpec_TAG_oreg2smv_set, doc=r"""oreg2smv : Ltl_StructCheckLtlSpec_oreg2smv""")
    ltl2smv = property(_ltl.Ltl_StructCheckLtlSpec_TAG_ltl2smv_get, _ltl.Ltl_StructCheckLtlSpec_TAG_ltl2smv_set, doc=r"""ltl2smv : Ltl_StructCheckLtlSpec_ltl2smv""")
    negate_formula = property(_ltl.Ltl_StructCheckLtlSpec_TAG_negate_formula_get, _ltl.Ltl_StructCheckLtlSpec_TAG_negate_formula_set, doc=r"""negate_formula : boolean""")
    removed_layer = property(_ltl.Ltl_StructCheckLtlSpec_TAG_removed_layer_get, _ltl.Ltl_StructCheckLtlSpec_TAG_removed_layer_set, doc=r"""removed_layer : boolean""")
    do_rewriting = property(_ltl.Ltl_StructCheckLtlSpec_TAG_do_rewriting_get, _ltl.Ltl_StructCheckLtlSpec_TAG_do_rewriting_set, doc=r"""do_rewriting : boolean""")

    def __init__(self):
        r"""__init__(Ltl_StructCheckLtlSpec_TAG self) -> Ltl_StructCheckLtlSpec_TAG"""
        _ltl.Ltl_StructCheckLtlSpec_TAG_swiginit(self, _ltl.new_Ltl_StructCheckLtlSpec_TAG())
    __swig_destroy__ = _ltl.delete_Ltl_StructCheckLtlSpec_TAG

# Register Ltl_StructCheckLtlSpec_TAG in _ltl:
_ltl.Ltl_StructCheckLtlSpec_TAG_swigregister(Ltl_StructCheckLtlSpec_TAG)

def witness(fsm, enc, feasible):
    r"""witness(BddFsm_ptr fsm, BddEnc_ptr enc, bdd_ptr feasible) -> node_ptr"""
    return _ltl.witness(fsm, enc, feasible)
PRIuPTR = _ltl.PRIuPTR

PRIdPTR = _ltl.PRIdPTR

LLU = _ltl.LLU

LLO = _ltl.LLO

LLX = _ltl.LLX

false = _ltl.false

true = _ltl.true

OUTCOME_GENERIC_ERROR = _ltl.OUTCOME_GENERIC_ERROR

OUTCOME_PARSER_ERROR = _ltl.OUTCOME_PARSER_ERROR

OUTCOME_SYNTAX_ERROR = _ltl.OUTCOME_SYNTAX_ERROR

OUTCOME_FILE_ERROR = _ltl.OUTCOME_FILE_ERROR

OUTCOME_SUCCESS_REQUIRED_HELP = _ltl.OUTCOME_SUCCESS_REQUIRED_HELP

OUTCOME_SUCCESS = _ltl.OUTCOME_SUCCESS


def print_ltlspec(arg1, arg2):
    r"""print_ltlspec(FILE * arg1, Prop_ptr arg2)"""
    return _ltl.print_ltlspec(arg1, arg2)

def Ltl_Init():
    r"""Ltl_Init()"""
    return _ltl.Ltl_Init()

def Ltl_CheckLtlSpec(prop):
    r"""Ltl_CheckLtlSpec(Prop_ptr prop)"""
    return _ltl.Ltl_CheckLtlSpec(prop)

def Ltl_spec_to_hierarchy(spec, context, st, what2smv, layer, outfh):
    r"""Ltl_spec_to_hierarchy(Expr_ptr spec, node_ptr context, SymbTable_ptr st, node_ptr (*)(unsigned int,node_ptr) what2smv, SymbLayer_ptr layer, FlatHierarchy_ptr outfh)"""
    return _ltl.Ltl_spec_to_hierarchy(spec, context, st, what2smv, layer, outfh)

def Ltl_apply_input_vars_rewriting(spec, st, layer, outfh):
    r"""Ltl_apply_input_vars_rewriting(Expr_ptr spec, SymbTable_ptr st, SymbLayer_ptr layer, FlatHierarchy_ptr outfh) -> Expr_ptr"""
    return _ltl.Ltl_apply_input_vars_rewriting(spec, st, layer, outfh)

def Ltl_StructCheckLtlSpec_create(prop):
    r"""Ltl_StructCheckLtlSpec_create(Prop_ptr prop) -> Ltl_StructCheckLtlSpec_TAG"""
    return _ltl.Ltl_StructCheckLtlSpec_create(prop)

def Ltl_StructCheckLtlSpec_destroy(_self):
    r"""Ltl_StructCheckLtlSpec_destroy(Ltl_StructCheckLtlSpec_TAG _self)"""
    return _ltl.Ltl_StructCheckLtlSpec_destroy(_self)

def Ltl_StructCheckLtlSpec_set_oreg2smv(_self, oreg2smv):
    r"""Ltl_StructCheckLtlSpec_set_oreg2smv(Ltl_StructCheckLtlSpec_TAG _self, Ltl_StructCheckLtlSpec_oreg2smv oreg2smv)"""
    return _ltl.Ltl_StructCheckLtlSpec_set_oreg2smv(_self, oreg2smv)

def Ltl_StructCheckLtlSpec_set_ltl2smv(_self, ltl2smv):
    r"""Ltl_StructCheckLtlSpec_set_ltl2smv(Ltl_StructCheckLtlSpec_TAG _self, Ltl_StructCheckLtlSpec_ltl2smv ltl2smv)"""
    return _ltl.Ltl_StructCheckLtlSpec_set_ltl2smv(_self, ltl2smv)

def Ltl_StructCheckLtlSpec_set_negate_formula(_self, negate_formula):
    r"""Ltl_StructCheckLtlSpec_set_negate_formula(Ltl_StructCheckLtlSpec_TAG _self, boolean negate_formula)"""
    return _ltl.Ltl_StructCheckLtlSpec_set_negate_formula(_self, negate_formula)

def Ltl_StructCheckLtlSpec_set_do_rewriting(_self, do_rewriting):
    r"""Ltl_StructCheckLtlSpec_set_do_rewriting(Ltl_StructCheckLtlSpec_TAG _self, boolean do_rewriting)"""
    return _ltl.Ltl_StructCheckLtlSpec_set_do_rewriting(_self, do_rewriting)

def Ltl_StructCheckLtlSpec_get_s0(_self):
    r"""Ltl_StructCheckLtlSpec_get_s0(Ltl_StructCheckLtlSpec_TAG _self) -> bdd_ptr"""
    return _ltl.Ltl_StructCheckLtlSpec_get_s0(_self)

def Ltl_StructCheckLtlSpec_get_clean_s0(_self):
    r"""Ltl_StructCheckLtlSpec_get_clean_s0(Ltl_StructCheckLtlSpec_TAG _self) -> bdd_ptr"""
    return _ltl.Ltl_StructCheckLtlSpec_get_clean_s0(_self)

def Ltl_StructCheckLtlSpec_build(_self):
    r"""Ltl_StructCheckLtlSpec_build(Ltl_StructCheckLtlSpec_TAG _self)"""
    return _ltl.Ltl_StructCheckLtlSpec_build(_self)

def Ltl_StructCheckLtlSpec_check(_self):
    r"""Ltl_StructCheckLtlSpec_check(Ltl_StructCheckLtlSpec_TAG _self)"""
    return _ltl.Ltl_StructCheckLtlSpec_check(_self)

def Ltl_StructCheckLtlSpec_print_result(_self):
    r"""Ltl_StructCheckLtlSpec_print_result(Ltl_StructCheckLtlSpec_TAG _self)"""
    return _ltl.Ltl_StructCheckLtlSpec_print_result(_self)

def Ltl_StructCheckLtlSpec_build_counter_example(_self, symbols):
    r"""Ltl_StructCheckLtlSpec_build_counter_example(Ltl_StructCheckLtlSpec_TAG _self, NodeList_ptr symbols) -> Trace_ptr"""
    return _ltl.Ltl_StructCheckLtlSpec_build_counter_example(_self, symbols)

def Ltl_StructCheckLtlSpec_explain(_self, symbols):
    r"""Ltl_StructCheckLtlSpec_explain(Ltl_StructCheckLtlSpec_TAG _self, NodeList_ptr symbols)"""
    return _ltl.Ltl_StructCheckLtlSpec_explain(_self, symbols)

