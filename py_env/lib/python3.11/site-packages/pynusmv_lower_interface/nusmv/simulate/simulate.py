# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.1.1
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.

from sys import version_info as _swig_python_version_info
# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _simulate
else:
    import _simulate

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


PRIuPTR = _simulate.PRIuPTR

PRIdPTR = _simulate.PRIdPTR

LLU = _simulate.LLU

LLO = _simulate.LLO

LLX = _simulate.LLX

false = _simulate.false

true = _simulate.true

OUTCOME_GENERIC_ERROR = _simulate.OUTCOME_GENERIC_ERROR

OUTCOME_PARSER_ERROR = _simulate.OUTCOME_PARSER_ERROR

OUTCOME_SYNTAX_ERROR = _simulate.OUTCOME_SYNTAX_ERROR

OUTCOME_FILE_ERROR = _simulate.OUTCOME_FILE_ERROR

OUTCOME_SUCCESS_REQUIRED_HELP = _simulate.OUTCOME_SUCCESS_REQUIRED_HELP

OUTCOME_SUCCESS = _simulate.OUTCOME_SUCCESS

Deterministic = _simulate.Deterministic

Random = _simulate.Random

Interactive = _simulate.Interactive


def Simulate_Init():
    r"""Simulate_Init()"""
    return _simulate.Simulate_Init()

def Simulate_End():
    r"""Simulate_End()"""
    return _simulate.Simulate_End()

def Simulate_ChooseOneState(arg1, arg2, arg3, arg4):
    r"""Simulate_ChooseOneState(BddFsm_ptr arg1, bdd_ptr arg2, Simulation_Mode arg3, int arg4) -> bdd_ptr"""
    return _simulate.Simulate_ChooseOneState(arg1, arg2, arg3, arg4)

def Simulate_ChooseOneStateInput(arg1, arg2, arg3, arg4, arg5, arg6, arg7):
    r"""Simulate_ChooseOneStateInput(BddFsm_ptr arg1, bdd_ptr arg2, bdd_ptr arg3, Simulation_Mode arg4, int arg5, bdd_ptr * arg6, bdd_ptr * arg7)"""
    return _simulate.Simulate_ChooseOneStateInput(arg1, arg2, arg3, arg4, arg5, arg6, arg7)

def Simulate_MultipleSteps(arg1, arg2, arg3, arg4, arg5, arg6):
    r"""Simulate_MultipleSteps(BddFsm_ptr arg1, bdd_ptr arg2, boolean arg3, Simulation_Mode arg4, int arg5, int arg6) -> node_ptr"""
    return _simulate.Simulate_MultipleSteps(arg1, arg2, arg3, arg4, arg5, arg6)

def SimulateTransSet_create(fsm, enc, from_state, next_states_set, next_states_count):
    r"""SimulateTransSet_create(BddFsm_ptr fsm, BddEnc_ptr enc, bdd_ptr from_state, bdd_ptr next_states_set, double next_states_count) -> SimulateTransSet_ptr"""
    return _simulate.SimulateTransSet_create(fsm, enc, from_state, next_states_set, next_states_count)

def SimulateTransSet_destroy(_self):
    r"""SimulateTransSet_destroy(SimulateTransSet_ptr _self)"""
    return _simulate.SimulateTransSet_destroy(_self)

def SimulateTransSet_get_from_state(_self):
    r"""SimulateTransSet_get_from_state(SimulateTransSet_ptr const _self) -> bdd_ptr"""
    return _simulate.SimulateTransSet_get_from_state(_self)

def SimulateTransSet_get_next_state_num(_self):
    r"""SimulateTransSet_get_next_state_num(SimulateTransSet_ptr const _self) -> int"""
    return _simulate.SimulateTransSet_get_next_state_num(_self)

def SimulateTransSet_get_next_state(_self, state_index):
    r"""SimulateTransSet_get_next_state(SimulateTransSet_ptr const _self, int state_index) -> bdd_ptr"""
    return _simulate.SimulateTransSet_get_next_state(_self, state_index)

def SimulateTransSet_get_inputs_num_at_state(_self, state_index):
    r"""SimulateTransSet_get_inputs_num_at_state(SimulateTransSet_ptr const _self, int state_index) -> int"""
    return _simulate.SimulateTransSet_get_inputs_num_at_state(_self, state_index)

def SimulateTransSet_get_input_at_state(_self, state_index, input_index):
    r"""SimulateTransSet_get_input_at_state(SimulateTransSet_ptr const _self, int state_index, int input_index) -> bdd_ptr"""
    return _simulate.SimulateTransSet_get_input_at_state(_self, state_index, input_index)

def SimulateTransSet_print(_self, show_changes_only, output):
    r"""SimulateTransSet_print(SimulateTransSet_ptr const _self, boolean show_changes_only, FILE * output) -> int"""
    return _simulate.SimulateTransSet_print(_self, show_changes_only, output)

def SimulateTransSet_get_state_input_at(_self, index, state, input):
    r"""SimulateTransSet_get_state_input_at(SimulateTransSet_ptr const _self, int index, bdd_ptr * state, bdd_ptr * input)"""
    return _simulate.SimulateTransSet_get_state_input_at(_self, index, state, input)

def SimulateTransSet_get_state_input_rand(_self, state, input):
    r"""SimulateTransSet_get_state_input_rand(SimulateTransSet_ptr const _self, bdd_ptr * state, bdd_ptr * input)"""
    return _simulate.SimulateTransSet_get_state_input_rand(_self, state, input)

def SimulateTransSet_get_state_input_det(_self, state, input):
    r"""SimulateTransSet_get_state_input_det(SimulateTransSet_ptr const _self, bdd_ptr * state, bdd_ptr * input)"""
    return _simulate.SimulateTransSet_get_state_input_det(_self, state, input)

