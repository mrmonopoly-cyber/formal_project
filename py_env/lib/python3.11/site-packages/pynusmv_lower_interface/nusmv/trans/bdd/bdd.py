# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.1.1
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.

from sys import version_info as _swig_python_version_info
# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _bdd
else:
    import _bdd

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


PRIuPTR = _bdd.PRIuPTR

PRIdPTR = _bdd.PRIdPTR

LLU = _bdd.LLU

LLO = _bdd.LLO

LLX = _bdd.LLX

false = _bdd.false

true = _bdd.true

OUTCOME_GENERIC_ERROR = _bdd.OUTCOME_GENERIC_ERROR

OUTCOME_PARSER_ERROR = _bdd.OUTCOME_PARSER_ERROR

OUTCOME_SYNTAX_ERROR = _bdd.OUTCOME_SYNTAX_ERROR

OUTCOME_FILE_ERROR = _bdd.OUTCOME_FILE_ERROR

OUTCOME_SUCCESS_REQUIRED_HELP = _bdd.OUTCOME_SUCCESS_REQUIRED_HELP

OUTCOME_SUCCESS = _bdd.OUTCOME_SUCCESS

TRANS_IMAGE_FORWARD_STATE = _bdd.TRANS_IMAGE_FORWARD_STATE

TRANS_IMAGE_FORWARD_STATE_INPUT = _bdd.TRANS_IMAGE_FORWARD_STATE_INPUT

TRANS_IMAGE_BACKWARD_STATE = _bdd.TRANS_IMAGE_BACKWARD_STATE

TRANS_IMAGE_BACKWARD_STATE_INPUT = _bdd.TRANS_IMAGE_BACKWARD_STATE_INPUT


def BddTrans_create(dd_manager, clusters_bdd, state_vars_cube, input_vars_cube, next_state_vars_cube, trans_type, cl_options):
    r"""BddTrans_create(DdManager * dd_manager, ClusterList_ptr const clusters_bdd, bdd_ptr state_vars_cube, bdd_ptr input_vars_cube, bdd_ptr next_state_vars_cube, TransType const trans_type, ClusterOptions_ptr const cl_options) -> BddTrans_ptr"""
    return _bdd.BddTrans_create(dd_manager, clusters_bdd, state_vars_cube, input_vars_cube, next_state_vars_cube, trans_type, cl_options)

def BddTrans_generic_create(transition, copy, destroy, compute_image, compute_k_image, get_monolithic_bdd, synchronous_product, print_short_info):
    r"""BddTrans_generic_create(void * transition, void *(*)(void *) copy, void (*)(void *) destroy, bdd_ptr (*)(void *,bdd_ptr,TransImageKind) compute_image, bdd_ptr (*)(void *,bdd_ptr,int,TransImageKind) compute_k_image, bdd_ptr (*)(void *) get_monolithic_bdd, void (*)(void *,void *const) synchronous_product, void (*)(void *,FILE *) print_short_info) -> BddTrans_ptr"""
    return _bdd.BddTrans_generic_create(transition, copy, destroy, compute_image, compute_k_image, get_monolithic_bdd, synchronous_product, print_short_info)

def BddTrans_apply_synchronous_product(_self, other):
    r"""BddTrans_apply_synchronous_product(BddTrans_ptr _self, BddTrans_ptr const other)"""
    return _bdd.BddTrans_apply_synchronous_product(_self, other)

def BddTrans_get_monolithic_bdd(_self):
    r"""BddTrans_get_monolithic_bdd(BddTrans_ptr const _self) -> bdd_ptr"""
    return _bdd.BddTrans_get_monolithic_bdd(_self)

def BddTrans_get_forward_image_state(_self, s):
    r"""BddTrans_get_forward_image_state(BddTrans_ptr const _self, bdd_ptr s) -> bdd_ptr"""
    return _bdd.BddTrans_get_forward_image_state(_self, s)

def BddTrans_get_forward_image_state_input(_self, s):
    r"""BddTrans_get_forward_image_state_input(BddTrans_ptr const _self, bdd_ptr s) -> bdd_ptr"""
    return _bdd.BddTrans_get_forward_image_state_input(_self, s)

def BddTrans_get_backward_image_state(_self, s):
    r"""BddTrans_get_backward_image_state(BddTrans_ptr const _self, bdd_ptr s) -> bdd_ptr"""
    return _bdd.BddTrans_get_backward_image_state(_self, s)

def BddTrans_get_backward_image_state_input(_self, s):
    r"""BddTrans_get_backward_image_state_input(BddTrans_ptr const _self, bdd_ptr s) -> bdd_ptr"""
    return _bdd.BddTrans_get_backward_image_state_input(_self, s)

def BddTrans_get_k_forward_image_state(_self, s, k):
    r"""BddTrans_get_k_forward_image_state(BddTrans_ptr const _self, bdd_ptr s, int k) -> bdd_ptr"""
    return _bdd.BddTrans_get_k_forward_image_state(_self, s, k)

def BddTrans_get_k_forward_image_state_input(_self, s, k):
    r"""BddTrans_get_k_forward_image_state_input(BddTrans_ptr const _self, bdd_ptr s, int k) -> bdd_ptr"""
    return _bdd.BddTrans_get_k_forward_image_state_input(_self, s, k)

def BddTrans_get_k_backward_image_state(_self, s, k):
    r"""BddTrans_get_k_backward_image_state(BddTrans_ptr const _self, bdd_ptr s, int k) -> bdd_ptr"""
    return _bdd.BddTrans_get_k_backward_image_state(_self, s, k)

def BddTrans_get_k_backward_image_state_input(_self, s, k):
    r"""BddTrans_get_k_backward_image_state_input(BddTrans_ptr const _self, bdd_ptr s, int k) -> bdd_ptr"""
    return _bdd.BddTrans_get_k_backward_image_state_input(_self, s, k)

def BddTrans_print_short_info(_self, file):
    r"""BddTrans_print_short_info(BddTrans_ptr const _self, FILE * file)"""
    return _bdd.BddTrans_print_short_info(_self, file)

def Cluster_create(dd):
    r"""Cluster_create(DdManager * dd) -> Cluster_ptr"""
    return _bdd.Cluster_create(dd)

def Cluster_is_equal(_self, other):
    r"""Cluster_is_equal(Cluster_ptr const _self, Cluster_ptr const other) -> boolean"""
    return _bdd.Cluster_is_equal(_self, other)

def Cluster_get_trans(_self):
    r"""Cluster_get_trans(Cluster_ptr const _self) -> bdd_ptr"""
    return _bdd.Cluster_get_trans(_self)

def Cluster_set_trans(_self, dd, current):
    r"""Cluster_set_trans(Cluster_ptr _self, DdManager * dd, bdd_ptr current)"""
    return _bdd.Cluster_set_trans(_self, dd, current)

def Cluster_get_quantification_state_input(_self):
    r"""Cluster_get_quantification_state_input(Cluster_ptr const _self) -> bdd_ptr"""
    return _bdd.Cluster_get_quantification_state_input(_self)

def Cluster_set_quantification_state_input(_self, dd, new_val):
    r"""Cluster_set_quantification_state_input(Cluster_ptr _self, DdManager * dd, bdd_ptr new_val)"""
    return _bdd.Cluster_set_quantification_state_input(_self, dd, new_val)

def Cluster_get_quantification_state(_self):
    r"""Cluster_get_quantification_state(Cluster_ptr const _self) -> bdd_ptr"""
    return _bdd.Cluster_get_quantification_state(_self)

def Cluster_set_quantification_state(_self, dd, new_val):
    r"""Cluster_set_quantification_state(Cluster_ptr _self, DdManager * dd, bdd_ptr new_val)"""
    return _bdd.Cluster_set_quantification_state(_self, dd, new_val)

def ClusterIwls95_create(dd, trans_options, v_c, w_c, x_c, y_c, z_c, min_c, max_c):
    r"""ClusterIwls95_create(DdManager * dd, ClusterOptions_ptr const trans_options, double const v_c, double const w_c, double const x_c, double const y_c, double const z_c, double const min_c, double const max_c) -> ClusterIwls95_ptr"""
    return _bdd.ClusterIwls95_create(dd, trans_options, v_c, w_c, x_c, y_c, z_c, min_c, max_c)

def ClusterIwls95_get_benefit(_self):
    r"""ClusterIwls95_get_benefit(ClusterIwls95_ptr const _self) -> double"""
    return _bdd.ClusterIwls95_get_benefit(_self)

def ClusterList_create(dd):
    r"""ClusterList_create(DdManager * dd) -> ClusterList_ptr"""
    return _bdd.ClusterList_create(dd)

def ClusterList_destroy(_self):
    r"""ClusterList_destroy(ClusterList_ptr _self)"""
    return _bdd.ClusterList_destroy(_self)

def ClusterList_copy(_self):
    r"""ClusterList_copy(ClusterList_ptr const _self) -> ClusterList_ptr"""
    return _bdd.ClusterList_copy(_self)

def ClusterList_begin(_self):
    r"""ClusterList_begin(ClusterList_ptr const _self) -> ClusterListIterator_ptr"""
    return _bdd.ClusterList_begin(_self)

def ClusterList_get_cluster(_self, iter):
    r"""ClusterList_get_cluster(ClusterList_ptr const _self, ClusterListIterator_ptr const iter) -> Cluster_ptr"""
    return _bdd.ClusterList_get_cluster(_self, iter)

def ClusterList_set_cluster(_self, iter, cluster):
    r"""ClusterList_set_cluster(ClusterList_ptr _self, ClusterListIterator_ptr const iter, Cluster_ptr cluster)"""
    return _bdd.ClusterList_set_cluster(_self, iter, cluster)

def ClusterList_length(_self):
    r"""ClusterList_length(ClusterList_ptr const _self) -> int"""
    return _bdd.ClusterList_length(_self)

def ClusterList_prepend_cluster(_self, cluster):
    r"""ClusterList_prepend_cluster(ClusterList_ptr _self, Cluster_ptr cluster)"""
    return _bdd.ClusterList_prepend_cluster(_self, cluster)

def ClusterList_append_cluster(_self, cluster):
    r"""ClusterList_append_cluster(ClusterList_ptr _self, Cluster_ptr cluster)"""
    return _bdd.ClusterList_append_cluster(_self, cluster)

def ClusterListIterator_next(_self):
    r"""ClusterListIterator_next(ClusterListIterator_ptr const _self) -> ClusterListIterator_ptr"""
    return _bdd.ClusterListIterator_next(_self)

def ClusterListIterator_is_end(_self):
    r"""ClusterListIterator_is_end(ClusterListIterator_ptr const _self) -> boolean"""
    return _bdd.ClusterListIterator_is_end(_self)

def ClusterList_reverse(_self):
    r"""ClusterList_reverse(ClusterList_ptr _self)"""
    return _bdd.ClusterList_reverse(_self)

def ClusterList_remove_cluster(_self, cluster):
    r"""ClusterList_remove_cluster(ClusterList_ptr _self, Cluster_ptr cluster) -> int"""
    return _bdd.ClusterList_remove_cluster(_self, cluster)

def ClusterList_apply_monolithic(_self):
    r"""ClusterList_apply_monolithic(ClusterList_ptr const _self) -> ClusterList_ptr"""
    return _bdd.ClusterList_apply_monolithic(_self)

def ClusterList_apply_threshold(_self, cl_options):
    r"""ClusterList_apply_threshold(ClusterList_ptr const _self, ClusterOptions_ptr const cl_options) -> ClusterList_ptr"""
    return _bdd.ClusterList_apply_threshold(_self, cl_options)

def ClusterList_apply_iwls95_partition(_self, state_vars_cube, input_vars_cube, next_state_vars_cube, cl_options):
    r"""ClusterList_apply_iwls95_partition(ClusterList_ptr const _self, bdd_ptr state_vars_cube, bdd_ptr input_vars_cube, bdd_ptr next_state_vars_cube, ClusterOptions_ptr const cl_options) -> ClusterList_ptr"""
    return _bdd.ClusterList_apply_iwls95_partition(_self, state_vars_cube, input_vars_cube, next_state_vars_cube, cl_options)

def ClusterList_apply_synchronous_product(_self, other):
    r"""ClusterList_apply_synchronous_product(ClusterList_ptr _self, ClusterList_ptr const other)"""
    return _bdd.ClusterList_apply_synchronous_product(_self, other)

def ClusterList_get_monolithic_bdd(_self):
    r"""ClusterList_get_monolithic_bdd(ClusterList_ptr const _self) -> bdd_ptr"""
    return _bdd.ClusterList_get_monolithic_bdd(_self)

def ClusterList_get_clusters_cube(_self):
    r"""ClusterList_get_clusters_cube(ClusterList_ptr const _self) -> bdd_ptr"""
    return _bdd.ClusterList_get_clusters_cube(_self)

def ClusterList_build_schedule(_self, state_vars_cube, input_vars_cube):
    r"""ClusterList_build_schedule(ClusterList_ptr _self, bdd_ptr state_vars_cube, bdd_ptr input_vars_cube)"""
    return _bdd.ClusterList_build_schedule(_self, state_vars_cube, input_vars_cube)

def ClusterList_get_image_state(_self, s):
    r"""ClusterList_get_image_state(ClusterList_ptr const _self, bdd_ptr s) -> bdd_ptr"""
    return _bdd.ClusterList_get_image_state(_self, s)

def ClusterList_get_image_state_input(_self, s):
    r"""ClusterList_get_image_state_input(ClusterList_ptr const _self, bdd_ptr s) -> bdd_ptr"""
    return _bdd.ClusterList_get_image_state_input(_self, s)

def ClusterList_get_k_image_state(_self, s, k):
    r"""ClusterList_get_k_image_state(ClusterList_ptr const _self, bdd_ptr s, int k) -> bdd_ptr"""
    return _bdd.ClusterList_get_k_image_state(_self, s, k)

def ClusterList_get_k_image_state_input(_self, s, k):
    r"""ClusterList_get_k_image_state_input(ClusterList_ptr const _self, bdd_ptr s, int k) -> bdd_ptr"""
    return _bdd.ClusterList_get_k_image_state_input(_self, s, k)

def ClusterList_print_short_info(_self, file):
    r"""ClusterList_print_short_info(ClusterList_ptr const _self, FILE * file)"""
    return _bdd.ClusterList_print_short_info(_self, file)

def ClusterList_check_equality(_self, other):
    r"""ClusterList_check_equality(ClusterList_ptr const _self, ClusterList_ptr const other) -> boolean"""
    return _bdd.ClusterList_check_equality(_self, other)

def ClusterList_check_schedule(_self):
    r"""ClusterList_check_schedule(ClusterList_ptr const _self) -> boolean"""
    return _bdd.ClusterList_check_schedule(_self)

def ClusterOptions_create(options):
    r"""ClusterOptions_create(OptsHandler_ptr options) -> ClusterOptions_ptr"""
    return _bdd.ClusterOptions_create(options)

def ClusterOptions_destroy(_self):
    r"""ClusterOptions_destroy(ClusterOptions_ptr _self)"""
    return _bdd.ClusterOptions_destroy(_self)

def ClusterOptions_get_threshold(_self):
    r"""ClusterOptions_get_threshold(ClusterOptions_ptr const _self) -> int"""
    return _bdd.ClusterOptions_get_threshold(_self)

def ClusterOptions_is_affinity(_self):
    r"""ClusterOptions_is_affinity(ClusterOptions_ptr const _self) -> boolean"""
    return _bdd.ClusterOptions_is_affinity(_self)

def ClusterOptions_clusters_appended(_self):
    r"""ClusterOptions_clusters_appended(ClusterOptions_ptr const _self) -> boolean"""
    return _bdd.ClusterOptions_clusters_appended(_self)

def ClusterOptions_is_iwls95_preorder(_self):
    r"""ClusterOptions_is_iwls95_preorder(ClusterOptions_ptr const _self) -> boolean"""
    return _bdd.ClusterOptions_is_iwls95_preorder(_self)

def ClusterOptions_get_cluster_size(_self):
    r"""ClusterOptions_get_cluster_size(ClusterOptions_ptr const _self) -> int"""
    return _bdd.ClusterOptions_get_cluster_size(_self)

def ClusterOptions_get_w1(_self):
    r"""ClusterOptions_get_w1(ClusterOptions_ptr const _self) -> int"""
    return _bdd.ClusterOptions_get_w1(_self)

def ClusterOptions_get_w2(_self):
    r"""ClusterOptions_get_w2(ClusterOptions_ptr const _self) -> int"""
    return _bdd.ClusterOptions_get_w2(_self)

def ClusterOptions_get_w3(_self):
    r"""ClusterOptions_get_w3(ClusterOptions_ptr const _self) -> int"""
    return _bdd.ClusterOptions_get_w3(_self)

def ClusterOptions_get_w4(_self):
    r"""ClusterOptions_get_w4(ClusterOptions_ptr const _self) -> int"""
    return _bdd.ClusterOptions_get_w4(_self)

def ClusterOptions_print(_self, file):
    r"""ClusterOptions_print(ClusterOptions_ptr const _self, FILE * file)"""
    return _bdd.ClusterOptions_print(_self, file)

def BddTrans_copy(trans):
    r"""BddTrans_copy(BddTrans_ptr const trans) -> BddTrans_ptr"""
    return _bdd.BddTrans_copy(trans)

def BddTrans_free(trans):
    r"""BddTrans_free(BddTrans_ptr trans)"""
    return _bdd.BddTrans_free(trans)

