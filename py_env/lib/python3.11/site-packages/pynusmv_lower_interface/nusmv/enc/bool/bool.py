# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.1.1
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.

from sys import version_info as _swig_python_version_info
# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _bool
else:
    import _bool

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)



def boolenc2baseenc(bool_enc):
    r"""boolenc2baseenc(BoolEnc_ptr bool_enc) -> BaseEnc_ptr"""
    return _bool.boolenc2baseenc(bool_enc)
PRIuPTR = _bool.PRIuPTR

PRIdPTR = _bool.PRIdPTR

LLU = _bool.LLU

LLO = _bool.LLO

LLX = _bool.LLX

false = _bool.false

true = _bool.true

OUTCOME_GENERIC_ERROR = _bool.OUTCOME_GENERIC_ERROR

OUTCOME_PARSER_ERROR = _bool.OUTCOME_PARSER_ERROR

OUTCOME_SYNTAX_ERROR = _bool.OUTCOME_SYNTAX_ERROR

OUTCOME_FILE_ERROR = _bool.OUTCOME_FILE_ERROR

OUTCOME_SUCCESS_REQUIRED_HELP = _bool.OUTCOME_SUCCESS_REQUIRED_HELP

OUTCOME_SUCCESS = _bool.OUTCOME_SUCCESS


def Object_destroy(_self, arg):
    r"""Object_destroy(Object_ptr _self, void * arg)"""
    return _bool.Object_destroy(_self, arg)

def Object_copy(_self):
    r"""Object_copy(Object_ptr const _self) -> Object_ptr"""
    return _bool.Object_copy(_self)
BIT_VALUE_FALSE = _bool.BIT_VALUE_FALSE

BIT_VALUE_TRUE = _bool.BIT_VALUE_TRUE

BIT_VALUE_DONTCARE = _bool.BIT_VALUE_DONTCARE


def BitValues_create(enc, var):
    r"""BitValues_create(struct BoolEnc_TAG * enc, node_ptr var) -> BitValues_ptr"""
    return _bool.BitValues_create(enc, var)

def BitValues_destroy(_self):
    r"""BitValues_destroy(BitValues_ptr _self)"""
    return _bool.BitValues_destroy(_self)

def BitValues_get_scalar_var(_self):
    r"""BitValues_get_scalar_var(BitValues_ptr const _self) -> node_ptr"""
    return _bool.BitValues_get_scalar_var(_self)

def BitValues_get_size(_self):
    r"""BitValues_get_size(BitValues_ptr const _self) -> size_t"""
    return _bool.BitValues_get_size(_self)

def BitValues_get_bits(_self):
    r"""BitValues_get_bits(BitValues_ptr const _self) -> NodeList_ptr"""
    return _bool.BitValues_get_bits(_self)

def BitValues_reset(_self):
    r"""BitValues_reset(BitValues_ptr _self)"""
    return _bool.BitValues_reset(_self)

def BitValues_get(_self, index):
    r"""BitValues_get(BitValues_ptr const _self, size_t index) -> BitValue"""
    return _bool.BitValues_get(_self, index)

def BitValues_get_value_from_expr(_self, expr):
    r"""BitValues_get_value_from_expr(BitValues_ptr const _self, node_ptr expr) -> BitValue"""
    return _bool.BitValues_get_value_from_expr(_self, expr)

def BitValues_set(_self, index, val):
    r"""BitValues_set(BitValues_ptr _self, size_t index, BitValue val)"""
    return _bool.BitValues_set(_self, index, val)

def BitValues_set_from_expr(_self, index, expr):
    r"""BitValues_set_from_expr(BitValues_ptr _self, size_t index, node_ptr expr)"""
    return _bool.BitValues_set_from_expr(_self, index, expr)

def BitValues_set_from_values_list(_self, enc, vals):
    r"""BitValues_set_from_values_list(BitValues_ptr _self, struct BoolEnc_TAG * enc, node_ptr vals)"""
    return _bool.BitValues_set_from_values_list(_self, enc, vals)

def BoolEnc_create(symb_table):
    r"""BoolEnc_create(SymbTable_ptr symb_table) -> BoolEnc_ptr"""
    return _bool.BoolEnc_create(symb_table)

def BoolEnc_destroy(_self):
    r"""BoolEnc_destroy(BoolEnc_ptr _self)"""
    return _bool.BoolEnc_destroy(_self)

def BoolEnc_is_var_bit(_self, name):
    r"""BoolEnc_is_var_bit(BoolEnc_ptr const _self, node_ptr name) -> boolean"""
    return _bool.BoolEnc_is_var_bit(_self, name)

def BoolEnc_is_var_scalar(_self, name):
    r"""BoolEnc_is_var_scalar(BoolEnc_ptr const _self, node_ptr name) -> boolean"""
    return _bool.BoolEnc_is_var_scalar(_self, name)

def BoolEnc_get_scalar_var_from_bit(_self, name):
    r"""BoolEnc_get_scalar_var_from_bit(BoolEnc_ptr const _self, node_ptr name) -> node_ptr"""
    return _bool.BoolEnc_get_scalar_var_from_bit(_self, name)

def BoolEnc_make_var_bit(_self, name, index):
    r"""BoolEnc_make_var_bit(BoolEnc_ptr const _self, node_ptr name, int index) -> node_ptr"""
    return _bool.BoolEnc_make_var_bit(_self, name, index)

def BoolEnc_get_index_from_bit(_self, name):
    r"""BoolEnc_get_index_from_bit(BoolEnc_ptr const _self, node_ptr name) -> int"""
    return _bool.BoolEnc_get_index_from_bit(_self, name)

def BoolEnc_get_var_bits(_self, name):
    r"""BoolEnc_get_var_bits(BoolEnc_ptr const _self, node_ptr name) -> NodeList_ptr"""
    return _bool.BoolEnc_get_var_bits(_self, name)

def BoolEnc_get_var_encoding(_self, name):
    r"""BoolEnc_get_var_encoding(BoolEnc_ptr const _self, node_ptr name) -> node_ptr"""
    return _bool.BoolEnc_get_var_encoding(_self, name)

def BoolEnc_get_values_bool_encoding(_self, values, bits):
    r"""BoolEnc_get_values_bool_encoding(BoolEnc_ptr const _self, node_ptr values, Set_t * bits) -> node_ptr"""
    return _bool.BoolEnc_get_values_bool_encoding(_self, values, bits)

def BoolEnc_scalar_layer_to_bool_layer(layer_name):
    r"""BoolEnc_scalar_layer_to_bool_layer(char const * layer_name) -> char const *"""
    return _bool.BoolEnc_scalar_layer_to_bool_layer(layer_name)

def BoolEnc_is_bool_layer(layer_name):
    r"""BoolEnc_is_bool_layer(char const * layer_name) -> boolean"""
    return _bool.BoolEnc_is_bool_layer(layer_name)

def BoolEnc_get_value_from_var_bits(_self, bit_values):
    r"""BoolEnc_get_value_from_var_bits(BoolEnc_ptr const _self, BitValues_ptr const bit_values) -> node_ptr"""
    return _bool.BoolEnc_get_value_from_var_bits(_self, bit_values)

def BoolEnc_get_var_mask(_self, name):
    r"""BoolEnc_get_var_mask(BoolEnc_ptr const _self, node_ptr name) -> node_ptr"""
    return _bool.BoolEnc_get_var_mask(_self, name)

