-- A three bit counter

MODULE counter_cell(carry_in)
VAR
  value : boolean;
ASSIGN
  init(value) := FALSE;
  next(value) := value xor carry_in;
DEFINE
  carry_out := value & carry_in;

MODULE main
VAR
  bit0 : counter_cell(TRUE);
  bit1 : counter_cell(bit0.carry_out);
  bit2 : counter_cell(bit1.carry_out);

LTLSPEC 
    G F bit0.carry_out -> G F bit2.carry_out
    
LTLSPEC
    G F !bit0.value -> G F (bit0.value & bit1.value & bit2.value)
    
LTLSPEC
    G F !bit2.carry_out -> G F FALSE
    
LTLSPEC
    G F TRUE -> G F bit2.carry_out



